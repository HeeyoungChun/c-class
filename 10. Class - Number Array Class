#ifndef Class_H_INCLUDED
#define Class_H_INCLUDED
#include <iostream>
using namespace std;

class NumberArray
{
private:
	float* arr;
public:
	NumberArray(int n)
	{
		arr = new float[n];
	}
	~NumberArray()
	{
		delete [] arr;
	}
	void storeNum(float number, int index)
	{
		arr[index] = number;
	}
	float retrieveNum(int index)
	{
		return arr[index];
	}
	float highestNum(int n)
	{
		float max = arr[0];
		for (int i = 0; i < n; i++)
		{
			if (arr[i] > max)
				max=arr[i];
		}
		return max;
	}
	float lowestNum(int n)
	{
		float min = arr[0];
		for (int i = 0; i < n; i++)
		{
			if (arr[i] < min)
				min = arr[i];
		}
		return min;
	}
	float average(int n)
	{
		float sum = 0;
		for (int i = 0; i < n; i++)
		{
			sum += arr[i];
		}
		return (sum / n);
	}
};
#endif

-----------------------------------------------------------------------------------

#include "Class.h"
#include <iostream>
using namespace std;

int main()
{
	NumberArray obj1(2), obj2(5);

	obj1.storeNum(12, 0);
	obj1.storeNum(2, 1);
	cout << "Retrieve number at index zero: " << obj1.retrieveNum(0) << endl;
	cout << "Highest number: " << obj1.highestNum(2) << endl;
	cout << "Lowest number: " << obj1.lowestNum(2) << endl;
	cout << "Average: " << obj1.average(2) << endl << endl;

	obj2.storeNum(1, 0);
	obj2.storeNum(2, 1);
	obj2.storeNum(3, 2);
	obj2.storeNum(4, 3);
	obj2.storeNum(5, 4);
	//Below is a purposeful error
	cout << "Error on retrieve Number: " << obj2.retrieveNum(6) << endl;
	//Error? The Testing
	cout << "Highest Number at index six: (error)" << obj2.highestNum(7) << endl;
	cout << "Highest Number at index four: " << obj2.highestNum(1) << endl;
	cout << "Lowest number: " << obj2.lowestNum(5) << endl;
	cout << "average at index full five: " << obj2.average(5) << endl;
	cout << "Average at index three: " << obj2.average(3) << endl;
	return 0;
}
